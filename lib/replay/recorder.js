// Generated by CoffeeScript 1.8.0
var passThrough, recorded;

passThrough = require("./pass_through");

recorded = function(settings) {
  var capture, catalog;
  catalog = settings.catalog;
  capture = passThrough(true);
  return function(request, callback) {
    var error, host, matcher, matchers, refused, response, _i, _len;
    host = request.url.hostname;
    if (request.url.port && request.url.port !== "80") {
      host += ":" + request.url.port;
    }
    try {
      matchers = catalog.find(host);
      if (matchers) {
        for (_i = 0, _len = matchers.length; _i < _len; _i++) {
          matcher = matchers[_i];
          response = matcher(request);
          if (response) {
            callback(null, response);
            return;
          }
        }
      }
    } catch (_error) {
      error = _error;
      error.code = "CORRUPT FIXTURE";
      error.syscall = "connect";
      callback(error);
      return;
    }
    if (settings.isDropped(request.url.hostname)) {
      refused = new Error("Error: connect ECONNREFUSED");
      refused.code = refused.errno = "ECONNREFUSED";
      refused.syscall = "connect";
      callback(refused);
      return;
    }
    if (settings.mode === "record") {
      capture(request, function(error, response) {
        if (error) {
          return callback(error);
        }
        return catalog.save(host, request, response, function(error) {
          return callback(error, response);
        });
      });
      return;
    }
    return callback(null);
  };
};

module.exports = recorded;
